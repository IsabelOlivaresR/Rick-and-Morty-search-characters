{"version":3,"sources":["components/Character.js","components/CharacterList.js","components/Filter.js","services/data.js","components/App.js","index.js"],"names":["Character","console","log","this","props","className","src","item","image","alt","name","species","React","Component","CharacterList","character","list","map","id","key","Filter","getValueFromSearchChild","bind","ev","getValueFromSearch","currentTarget","value","type","placeholder","onChange","getDataFromApi","fetch","then","response","json","responseData","results","App","state","characters","filterSearch","setState","filter","toUpperCase","includes","ReactDOM","render","document","querySelector"],"mappings":"4LAmBeA,E,uKAdX,OADAC,QAAQC,IAAIC,KAAKC,OAEf,yBAAKC,UAAU,kBACb,yBACEA,UAAU,gBACVC,IAAKH,KAAKC,MAAMG,KAAKC,MACrBC,IAAKN,KAAKC,MAAMG,KAAKG,OAEvB,wBAAIL,UAAU,kBAAkBF,KAAKC,MAAMG,KAAKG,MAChD,uBAAGL,UAAU,qBAAqBF,KAAKC,MAAMG,KAAKI,c,GAXlCC,IAAMC,WCiBfC,EAhBO,SAACV,GACrB,IAAMW,EAAYX,EAAMY,KAAKC,KAAI,SAACV,EAAMW,GACtC,OACE,wBAAIb,UAAU,sBAAsBc,IAAKZ,EAAKW,IAC5C,kBAAC,EAAD,CAAWX,KAAMA,QAKvB,OADAN,QAAQC,IAAIa,GAEV,6BACE,wBAAIV,UAAU,cAAd,cACA,wBAAIA,UAAU,kBAAkBU,KCavBK,E,kDAzBb,WAAYhB,GAAQ,IAAD,8BACjB,cAAMA,IAEDiB,wBAA0B,EAAKA,wBAAwBC,KAA7B,gBAHd,E,oEAKKC,GACtBpB,KAAKC,MAAMoB,mBAAmBD,EAAGE,cAAcC,S,+BAI/C,OACE,8BACE,qDACA,2BACEC,KAAK,OACLjB,KAAK,SACLL,UAAU,aACVuB,YAAY,yBACZC,SAAU1B,KAAKkB,+B,GAnBJT,IAAMC,WCMZiB,EARQ,WACrB,OAAOC,MAAM,8CACVC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,OAAOA,EAAaC,YC0CXC,E,kDAxCb,WAAYjC,GAAQ,IAAD,8BACjB,cAAMA,IACDkC,MAAQ,CACXC,WAAY,GACZC,aAAc,IAEhB,EAAKhB,mBAAqB,EAAKA,mBAAmBF,KAAxB,gBANT,E,gEAQE,IAAD,OAClBQ,IAAiBE,MAAK,SAACG,GACrB,EAAKM,SAAS,CACZF,WAAYJ,S,yCAICZ,GACjBtB,QAAQC,IAAIqB,GACZpB,KAAKsC,SAAS,CAAED,aAAcjB,M,+BAGtB,IAAD,OACPtB,QAAQC,IAAIC,KAAKmC,MAAMC,YACvB,IAAMvC,EAAYG,KAAKmC,MAAMC,WAAWG,QAAO,SAAC3B,GAC9C,MAAgC,KAA5B,EAAKuB,MAAME,cACNzB,EAAUL,KACdiC,cACAC,SAAS,EAAKN,MAAME,aAAaG,kBAKxC,OACE,6BACE,kBAAC,EAAD,CAAQnB,mBAAoBrB,KAAKqB,qBACjC,kBAAC,EAAD,CAAeR,KAAMhB,S,GAnCXY,IAAMC,W,MCAxBgC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W","file":"static/js/main.1c334009.chunk.js","sourcesContent":["import React from 'react';\n\nclass Character extends React.Component {\n  render() {\n    console.log(this.props);\n    return (\n      <div className='character_info'>\n        <img\n          className='character_img'\n          src={this.props.item.image}\n          alt={this.props.item.name}\n        />\n        <h2 className='character_name'>{this.props.item.name}</h2>\n        <p className='character_species'>{this.props.item.species}</p>\n      </div>\n    );\n  }\n}\n\nexport default Character;\n","import React from 'react';\nimport Character from './Character';\n\nconst CharacterList = (props) => {\n  const character = props.list.map((item, id) => {\n    return (\n      <li className='character_container' key={item.id}>\n        <Character item={item} />\n      </li>\n    );\n  });\n  console.log(character);\n  return (\n    <div>\n      <h1 className='page_title'>Mis series</h1>\n      <ul className='character_info'>{character}</ul>\n    </div>\n  );\n};\nexport default CharacterList;\n","import React from 'react';\r\n\r\nclass Filter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.getValueFromSearchChild = this.getValueFromSearchChild.bind(this);\r\n  }\r\n  getValueFromSearchChild(ev) {\r\n    this.props.getValueFromSearch(ev.currentTarget.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form>\r\n        <label>Busca un personaje</label>\r\n        <input\r\n          type='text'\r\n          name='search'\r\n          className='search-bar'\r\n          placeholder='Introduce un personaje'\r\n          onChange={this.getValueFromSearchChild}\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Filter;\r\n","const getDataFromApi = () => {\r\n  return fetch('https://rickandmortyapi.com/api/character/')\r\n    .then((response) => response.json())\r\n    .then((responseData) => {\r\n      return responseData.results;\r\n    });\r\n};\r\n\r\nexport default getDataFromApi;\r\n","import React from 'react';\nimport CharacterList from './CharacterList';\nimport Filter from './Filter';\nimport getDataFromApi from '../services/data';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      characters: [],\n      filterSearch: '',\n    };\n    this.getValueFromSearch = this.getValueFromSearch.bind(this);\n  }\n  componentDidMount() {\n    getDataFromApi().then((responseData) => {\n      this.setState({\n        characters: responseData,\n      });\n    });\n  }\n  getValueFromSearch(ev) {\n    console.log(ev);\n    this.setState({ filterSearch: ev });\n  }\n\n  render() {\n    console.log(this.state.characters);\n    const Character = this.state.characters.filter((character) => {\n      if (this.state.filterSearch !== '') {\n        return character.name\n          .toUpperCase()\n          .includes(this.state.filterSearch.toUpperCase());\n      } else {\n        return true;\n      }\n    });\n    return (\n      <div>\n        <Filter getValueFromSearch={this.getValueFromSearch} />\n        <CharacterList list={Character} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './stylesheets/main.scss';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}