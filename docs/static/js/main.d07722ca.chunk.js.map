{"version":3,"sources":["images/human.png","images/alien.png","images/Rick_and_Morty_-_logo_(English).png","images/spaceship.png","images/rip.png","images/NotFound.jpg","components/Header.js","components/CharacterCard.js","components/CharacterList.js","components/CharacterDetail.js","components/PageNotFound.js","components/Filter.js","services/data.js","components/App.js","index.js"],"names":["module","exports","Header","className","src","Spaceship","alt","Logo","React","Component","CharacterCard","this","props","item","image","name","species","Human","Alien","CharacterList","character","list","sort","a","b","map","id","key","to","length","filterSearch","CharacterDetail","origin","episode","status","Dead","PageNotFound","console","log","NotFound","Filter","getValueFromSearchChild","bind","getOnlyHumanChild","getOnlyAlienChild","ev","getValueFromSearch","currentTarget","value","getOnlyHuman","getOnlyAlien","onSubmit","event","preventDefault","type","placeholder","onChange","checked","isHumanChecked","isAlienChecked","getDataFromApi","fetch","then","response","json","responseData","results","App","state","characters","renderCharacterDetail","setState","prevState","routeCharacterId","match","params","characterInfo","find","parseInt","Character","filter","toUpperCase","includes","exact","path","render","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.d07722ca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/human.af8d24e5.png\";","module.exports = __webpack_public_path__ + \"static/media/alien.8756e556.png\";","module.exports = __webpack_public_path__ + \"static/media/Rick_and_Morty_-_logo_(English).75509f2e.png\";","module.exports = __webpack_public_path__ + \"static/media/spaceship.5b249f9f.png\";","module.exports = __webpack_public_path__ + \"static/media/rip.c92f4174.png\";","module.exports = __webpack_public_path__ + \"static/media/NotFound.63565465.jpg\";","import React from 'react';\r\nimport Logo from '../images/Rick_and_Morty_-_logo_(English).png';\r\nimport Spaceship from '../images/spaceship.png';\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className='header'>\r\n        <div className='header__animation'>\r\n          <img\r\n            className='header__animation__img'\r\n            src={Spaceship}\r\n            alt='spaceship'\r\n          />\r\n        </div>\r\n        <img className='header__img' src={Logo} alt='Rick and Morty' />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\nimport Human from '../images/human.png';\nimport Alien from '../images/alien.png';\nimport PropTypes from 'prop-types';\n\nclass CharacterCard extends React.Component {\n  render() {\n    return (\n      <div className='characterCard'>\n        <img\n          className='characterCard__img'\n          src={this.props.item.image}\n          alt={this.props.item.name}\n        />\n        <h2 className='characterCard__name'>{this.props.item.name}</h2>\n        <img\n          className='characterCard__species'\n          src={this.props.item.species === 'Human' ? [Human] : [Alien]}\n          alt={this.props.item.species === 'Human' ? 'Human' : 'Alien'}\n        />\n      </div>\n    );\n  }\n}\nCharacterCard.propTypes = {\n  image: PropTypes.string,\n  name: PropTypes.string,\n  species: PropTypes.string,\n};\nexport default CharacterCard;\n","import React from 'react';\nimport CharacterCard from './CharacterCard';\nimport { Link } from 'react-router-dom';\n\nconst CharacterList = (props) => {\n  const character = props.list\n    .sort(function (a, b) {\n      if (a.name < b.name) {\n        return -1;\n      }\n      if (a.name > b.name) {\n        return 1;\n      }\n      return 0;\n    })\n    .map((item, id) => {\n      return (\n        <li className='characterCard_container' key={item.id}>\n          <Link to={`/character/${item.id}`}>\n            <CharacterCard item={item} />\n          </Link>\n        </li>\n      );\n    });\n\n  return (\n    <div>\n      {character.length !== 0 ? (\n        <ul className='characters__container'>{character}</ul>\n      ) : (\n        <p className='searchAlert'>\n          There are no characters matching the search term \"{props.filterSearch}\n          \"\n        </p>\n      )}\n    </div>\n  );\n};\nexport default CharacterList;\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Human from '../images/human.png';\r\nimport Alien from '../images/alien.png';\r\nimport Dead from '../images/rip.png';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass CharacterDetail extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className='character_container'>\r\n        <Link to={'/'}>\r\n          <span className='pageNotFound__return'>\r\n            <i className='fas fa-long-arrow-alt-left'></i> Back\r\n          </span>\r\n        </Link>\r\n        <div className='characterDetail'>\r\n          <img\r\n            className='characterDetail__img'\r\n            src={this.props.image}\r\n            alt={this.props.name}\r\n          />\r\n          <h2 className='characterDetail__name'>{this.props.name}</h2>\r\n          <img\r\n            className='characterDetail__icon'\r\n            src={this.props.species === 'Human' ? [Human] : [Alien]}\r\n            alt={this.props.species === 'Human' ? 'Human' : 'Alien'}\r\n          />\r\n          <p className='characterDetail__paragraph'>\r\n            Origin: {this.props.origin.name}\r\n          </p>\r\n          <p className='characterDetail__paragraph'>\r\n            Episodes: {this.props.episode.length}\r\n          </p>\r\n          {this.props.status === 'Dead' ? (\r\n            <img className='ripIcon' src={Dead} alt='dead' />\r\n          ) : (\r\n            <p className='characterDetail__paragraph'>\r\n              Status: {this.props.status}\r\n            </p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCharacterDetail.propTypes = {\r\n  image: PropTypes.string,\r\n  name: PropTypes.string,\r\n  species: PropTypes.string,\r\n  origin: PropTypes.object,\r\n  episode: PropTypes.array,\r\n  status: PropTypes.string,\r\n};\r\n\r\nexport default CharacterDetail;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport NotFound from '../images/NotFound.jpg';\r\n\r\nclass PageNotFound extends React.Component {\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <div className='PNF_container'>\r\n        <div className='pageNotFound'>\r\n          <p className='errorMessage'>404 NOT FOUND</p>\r\n          <Link to={'/'}>\r\n            <span className='pageNotFound__return'>\r\n              <i className='fas fa-long-arrow-alt-left'></i> Back\r\n            </span>\r\n          </Link>\r\n          <img\r\n            className='pageNotFound__img'\r\n            src={NotFound}\r\n            alt='Page not found'\r\n          />\r\n          <p className='pageNotFound__alert'>\"This character doesn't exist\".</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageNotFound;\r\n","import React from 'react';\r\nimport Human from '../images/human.png';\r\nimport Alien from '../images/alien.png';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Filter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.getValueFromSearchChild = this.getValueFromSearchChild.bind(this);\r\n    this.getOnlyHumanChild = this.getOnlyHumanChild.bind(this);\r\n    this.getOnlyAlienChild = this.getOnlyAlienChild.bind(this);\r\n  }\r\n  getValueFromSearchChild(ev) {\r\n    this.props.getValueFromSearch(ev.currentTarget.value);\r\n  }\r\n  getOnlyHumanChild(ev) {\r\n    this.props.getOnlyHuman(ev);\r\n  }\r\n  getOnlyAlienChild(ev) {\r\n    this.props.getOnlyAlien(ev);\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <form className='form' onSubmit={(event) => event.preventDefault()}>\r\n        <input\r\n          type='text'\r\n          name='search'\r\n          className='form__searchBar'\r\n          placeholder='Summer Smith'\r\n          value={this.props.filterSearch}\r\n          onChange={this.getValueFromSearchChild}\r\n        />\r\n        <div>\r\n          <label>\r\n            <img className='filter_icons' src={Human} alt='Human' />\r\n          </label>\r\n          <input\r\n            type='Checkbox'\r\n            className='humanFilter'\r\n            onChange={this.getOnlyHumanChild}\r\n            checked={this.props.isHumanChecked}\r\n          />\r\n          <label>\r\n            <img className='filter_icons' src={Alien} alt='Human' />\r\n          </label>\r\n          <input\r\n            type='Checkbox'\r\n            className='alienFilter'\r\n            onChange={this.getOnlyAlienChild}\r\n            checked={this.props.isAlienChecked}\r\n          />\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFilter.propTypes = {\r\n  getValueFromSearch: PropTypes.func,\r\n  filterSearch: PropTypes.string,\r\n  getOnlyAlien: PropTypes.func,\r\n  getOnlyHuman: PropTypes.func,\r\n  isHumanChecked: PropTypes.bool,\r\n  isAlienChecked: PropTypes.bool,\r\n};\r\n\r\nexport default Filter;\r\n","const getDataFromApi = () => {\r\n  return fetch('https://rickandmortyapi.com/api/character/')\r\n    .then((response) => response.json())\r\n    .then((responseData) => {\r\n      return responseData.results;\r\n    });\r\n};\r\n\r\nexport default getDataFromApi;\r\n","import React from 'react';\nimport Header from './Header';\nimport CharacterList from './CharacterList';\nimport CharacterDetail from './CharacterDetail';\nimport PageNotFound from './PageNotFound';\nimport Filter from './Filter';\nimport getDataFromApi from '../services/data';\nimport { Route, Switch } from 'react-router-dom';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      characters: [],\n      filterSearch: '',\n      isHumanChecked: false,\n      isAlienChecked: false,\n    };\n    this.getValueFromSearch = this.getValueFromSearch.bind(this);\n    this.renderCharacterDetail = this.renderCharacterDetail.bind(this);\n    this.getOnlyHuman = this.getOnlyHuman.bind(this);\n    this.getOnlyAlien = this.getOnlyAlien.bind(this);\n  }\n  componentDidMount() {\n    getDataFromApi().then((responseData) => {\n      this.setState({\n        characters: responseData,\n      });\n    });\n  }\n\n  getValueFromSearch(ev) {\n    this.setState({ filterSearch: ev });\n  }\n  getOnlyHuman(ev) {\n    this.setState((prevState) => {\n      return {\n        isHumanChecked: !prevState.isHumanChecked,\n      };\n    });\n  }\n  getOnlyAlien(ev) {\n    this.setState((prevState) => {\n      return {\n        isAlienChecked: !prevState.isAlienChecked,\n      };\n    });\n  }\n\n  renderCharacterDetail(props) {\n    const routeCharacterId = props.match.params.id;\n    const characterInfo = this.state.characters.find(\n      (character) => character.id === parseInt(routeCharacterId)\n    );\n    if (characterInfo) {\n      return (\n        <CharacterDetail\n          name={characterInfo.name}\n          image={characterInfo.image}\n          species={characterInfo.species}\n          origin={characterInfo.origin}\n          episode={characterInfo.episode}\n          status={characterInfo.status}\n        />\n      );\n    } else {\n      return <PageNotFound />;\n    }\n  }\n  render() {\n    const Character = this.state.characters\n      .filter((character) => {\n        if (this.state.filterSearch !== '') {\n          return character.name\n            .toUpperCase()\n            .includes(this.state.filterSearch.toUpperCase());\n        } else {\n          return true;\n        }\n      })\n\n      .filter((character) => {\n        if (this.state.isHumanChecked === true) {\n          return character.species.includes('Human');\n        } else {\n          return true;\n        }\n      })\n      .filter((character) => {\n        if (this.state.isAlienChecked === true) {\n          return character.species.includes('Alien');\n        } else {\n          return true;\n        }\n      });\n\n    return (\n      <div>\n        <Switch>\n          <Route exact path='/'>\n            <Header />\n            <Filter\n              getValueFromSearch={this.getValueFromSearch}\n              filterSearch={this.state.filterSearch}\n              getOnlyHuman={this.getOnlyHuman}\n              isHumanChecked={this.state.isHumanChecked}\n              getOnlyAlien={this.getOnlyAlien}\n              isAlienChecked={this.state.isAlienChecked}\n            />\n            <CharacterList\n              list={Character}\n              filterSearch={this.state.filterSearch}\n            />\n          </Route>\n          <Route path='/character/:id' render={this.renderCharacterDetail} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App';\nimport './stylesheets/reset.scss';\nimport './stylesheets/main.scss';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}